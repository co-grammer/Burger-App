{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","hoc/Layout/Layout.module.css","components/UI/BackDrop/BackDrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/BackDrop/BackDrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auxiliary","props","children","Logo","className","classes","src","burgerLogo","alt","NavigationItem","to","link","exact","activeClassName","active","NavigationItems","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","DesktopOnly","BackDrop","show","SideDrawer","attachedClasses","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerCloseHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Label","label","Less","removed","disabled","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","testTransform","purchaseCancelled","purchaseContinue","instance","axios","create","baseURL","Spinner","Loader","WithErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","resInterceptor","response","eject","message","INGREDIENT_PRICES","salad","bacon","cheese","meat","withErrorHandler","totalPrice","purchasing","loader","updatePurchaseState","sum","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","data","catch","disabledInfo","burger","orderSummary","CheckoutSummary","width","margin","onCancelClicked","onContinueClicked","Input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","email","street","zipCode","minLength","maxLength","country","deliveryMethd","formIsvalid","loading","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledhandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","Order","ingredientName","amount","ingredientOutput","ig","textTransform","display","padding","border","Number","parseFloat","orders","res","fetchedOrders","App","component","Orders","BurgerBuilder","Boolean","window","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,kBCAxUD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,2B,kBCAvID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,gBCAjJD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,iBCAjID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,iBCAhGD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,OAAS,iC,kBCAnFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,2BCA7FD,EAAOC,QAAU,CAAC,KAAO,qB,gBCDzBD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,gBAAkB,2C,iBCApCD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,QAAU,0B,gBCA5BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,iBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,OAAS,wBAAwB,MAAQ,yB,iBCA5FD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,gBCAzED,EAAOC,QAAU,CAAC,MAAQ,uB,0MCCXC,EAFG,SAAAC,GAAK,OAAIA,EAAMC,U,mDCUlBC,EANF,SAAAF,GAAK,OACd,yBAAKG,UAAWC,IAAQF,MACpB,yBAAKG,IAAKC,IAAYC,IAAI,e,kCCQnBC,EATQ,SAACR,GAAD,OACnB,wBAAIG,UAAWC,IAAQI,gBACnB,kBAAC,IAAD,CACIC,GAAIT,EAAMU,KACVC,MAAOX,EAAMW,MACbC,gBAAiBR,IAAQS,QAASb,EAAMC,YCCrCa,EAPS,SAACd,GAAD,OACpB,wBAAIG,UAAWC,IAAQU,iBACnB,kBAAC,EAAD,CAAgBJ,KAAK,IAAIC,OAAK,EAACE,QAAM,GAArC,kBACA,kBAAC,EAAD,CAAgBH,KAAK,WAArB,Y,iBCIOK,EARM,SAACf,GAAD,OACjB,yBAAKG,UAAWC,IAAQW,aAAcC,QAAShB,EAAMiB,SACjD,8BACA,8BACA,gCCWOC,EAZC,SAAAlB,GAAK,OACjB,4BAAQG,UAAWC,IAAQc,SACvB,kBAAC,EAAD,CAAcD,QAASjB,EAAMmB,sBAC7B,yBAAKhB,UAAWC,IAAQF,MACpB,kBAAC,EAAD,OAEJ,yBAAKC,UAAWC,IAAQgB,aACpB,kBAAC,EAAD,S,mDCNGC,EAJE,SAAArB,GAAK,OAClBA,EAAMsB,KAAO,yBAAKnB,UAAWC,IAAQiB,SAAUL,QAAShB,EAAMiB,UAAkB,MCuBrEM,EApBI,SAACvB,GAChB,IAAIwB,EAAkB,CAACpB,IAAQmB,WAAYnB,IAAQqB,OAInD,OAHGzB,EAAM0B,OACLF,EAAkB,CAACpB,IAAQmB,WAAYnB,IAAQuB,OAG/C,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUL,KAAMtB,EAAM0B,KAAMT,QAASjB,EAAM4B,SAC3C,yBAAKzB,UAAWqB,EAAgBK,KAAK,MACjC,yBAAK1B,UAAWC,IAAQF,MACpB,kBAAC,EAAD,OAEJ,6BACI,kBAAC,EAAD,UCeL4B,E,4MA3BXC,MAAQ,CACJC,gBAAgB,G,EAGpBC,uBAAyB,WACrB,EAAKC,SAAS,CAACF,gBAAgB,K,EAGnCG,wBAA0B,WACtB,EAAKD,UAAS,SAACE,GACX,MAAO,CAACJ,gBAAiBI,EAAUJ,oB,uDAKvC,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASb,oBAAqBkB,KAAKF,0BACnC,kBAAC,EAAD,CACIT,KAAMW,KAAKN,MAAMC,eACjBJ,OAAQS,KAAKJ,yBACjB,0BAAM9B,UAAWC,IAAQkC,SAAUD,KAAKrC,MAAMC,e,GAvBzCsC,a,kDCuCNC,E,uKAvCP,IAAIC,EAAa,KAErB,OAAOJ,KAAKrC,MAAM0C,MACd,IAAK,eACDD,EAAa,yBAAKtC,UAAWC,IAAQuC,cACrC,MACJ,IAAK,YACDF,EACI,yBAAKtC,UAAWC,IAAQwC,UACpB,yBAAKzC,UAAWC,IAAQyC,SACxB,yBAAK1C,UAAWC,IAAQ0C,UAGhC,MACJ,IAAK,OACGL,EAAa,yBAAKtC,UAAWC,IAAQ2C,OACrC,MACR,IAAK,SACGN,EAAa,yBAAKtC,UAAWC,IAAQ4C,SACrC,MACR,IAAK,QACGP,EAAa,yBAAKtC,UAAWC,IAAQ6C,QACrC,MACR,IAAK,QACGR,EAAa,yBAAKtC,UAAWC,IAAQ8C,QACrC,MACR,QACQT,EAAa,KAGzB,OAAOA,M,GAhCoBF,aCqBhBY,EArBA,SAACnD,GACZ,IAAIoD,EAAyBC,OAAOC,KAAKtD,EAAMuD,aAAaC,KAAI,SAACC,GAC7D,OAAO,YAAIC,MAAM1D,EAAMuD,YAAYE,KAASD,KAAI,SAACG,EAAGC,GAChD,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAGlB,KAAMe,UAEpDK,QAAO,SAACC,EAAKC,GACZ,OAAOD,EAAIE,OAAOD,MAMtB,OAHqC,IAAlCZ,EAAuBc,SACtBd,EAAyB,gEAGzB,yBAAKjD,UAAWC,IAAQ+C,QACpB,kBAAC,EAAD,CAAkBT,KAAK,cACtBU,EACD,kBAAC,EAAD,CAAkBV,KAAK,mB,kCCFpByB,EAfM,SAACnE,GAClB,OACI,yBAAKG,UAAWC,IAAQ+D,cACpB,yBAAKhE,UAAWC,IAAQgE,OAAQpE,EAAMqE,OACtC,4BACIlE,UAAWC,IAAQkE,KACnBtD,QAAShB,EAAMuE,QACfC,SAAUxE,EAAMwE,UAHpB,QAIA,4BACIrE,UAAWC,IAAQqE,KACnBzD,QAAShB,EAAM0E,OAFnB,UCPNC,EAAW,CACT,CAACN,MAAM,QAAS3B,KAAK,SACrB,CAAC2B,MAAM,QAAS3B,KAAK,SACrB,CAAC2B,MAAM,SAAU3B,KAAK,UACtB,CAAC2B,MAAM,OAAQ3B,KAAK,SAuBbkC,GApBO,SAAC5E,GACnB,OACI,yBAAKG,UAAWC,IAAQwE,eACpB,6CAAkB,gCAAS5E,EAAM6E,MAAMC,QAAQ,KAC9CH,EAASnB,KAAI,SAACuB,GACZ,OAAO,kBAAC,EAAD,CACMlB,IAAKkB,EAAKV,MACVA,MAAOU,EAAKV,MACZK,MAAO,kBAAM1E,EAAMgF,gBAAgBD,EAAKrC,OACxC6B,QAAS,kBAAMvE,EAAMiF,kBAAkBF,EAAKrC,OAC5C8B,SAAUxE,EAAMwE,SAASO,EAAKrC,WAE9C,4BACAvC,UAAWC,IAAQ8E,YACnBV,UAAWxE,EAAMmF,YACjBnE,QAAShB,EAAMoF,SAHf,e,oBCSGC,G,oLA1BYC,EAAWC,GAC9B,OAAOD,EAAUhE,OAASe,KAAKrC,MAAMsB,MAAQgE,EAAUrF,WAAaoC,KAAKrC,MAAMC,W,4CAI/EuF,QAAQC,IAAI,wB,+BAKZ,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUnE,KAAMe,KAAKrC,MAAMsB,KAAML,QAASoB,KAAKrC,MAAM0F,cACrD,yBACIvF,UAAWC,KAAQiF,MACnBM,MAAO,CACHC,UAAWvD,KAAKrC,MAAMsB,KAAO,gBAAiB,qBAC9CuE,QAASxD,KAAKrC,MAAMsB,KAAO,IAAM,MAEhCe,KAAKrC,MAAMC,e,GApBhBsC,a,oBCKLuD,GAPA,SAAA9F,GAAK,OACpB,4BACIG,UAAW,CAACC,KAAQ0F,OAAQ1F,KAAQJ,EAAM+F,UAAUlE,KAAK,KACzDb,QAAShB,EAAMiB,QACfuD,SAAUxE,EAAMwE,UAAWxE,EAAMC,WC0BtB+F,G,oLA1BPR,QAAQC,IAAI,+B,+BAGL,IAAD,OACAQ,EAAoB5C,OAAOC,KAAKjB,KAAKrC,MAAMuD,aAAaC,KAAI,SAAAC,GAC9D,OAAO,wBAAII,IAAKJ,GACJ,0BAAMkC,MAAO,CAACO,cAAe,eAAgBzC,GADlD,KACkE,EAAKzD,MAAMuD,YAAYE,OAIpG,OACI,kBAAC,EAAD,KACI,0CACA,iFACA,4BACKwC,GAEL,2BAAG,gDAAsB5D,KAAKrC,MAAM6E,MAAMC,QAAQ,KAClD,oDACA,kBAAC,GAAD,CAAQiB,QAAQ,SAAS9E,QAASoB,KAAKrC,MAAMmG,mBAA7C,UACA,kBAAC,GAAD,CAAQJ,QAAQ,UAAU9E,QAASoB,KAAKrC,MAAMoG,kBAA9C,gB,GAvBW7D,a,SCEZ8D,G,QAJEC,EAAMC,OAAO,CAC1BC,QAAS,kD,oBCIEC,GAJC,kBACZ,yBAAKtG,UAAWC,KAAQsG,QAAxB,eC0CWC,GA1CU,SAACC,EAAkBN,GACxC,mNACIvE,MAAQ,CACJ8E,MAAO,MAFf,EAqBIC,sBAAwB,WACpB,EAAK5E,SAAS,CAAC2E,MAAO,QAtB9B,mEAK2B,IAAD,OAClBxE,KAAK0E,eAAiBT,EAAMU,aAAaC,QAAQC,KAAI,SAAAD,GAEjD,OADA,EAAK/E,SAAS,CAAC2E,MAAO,OACfI,KAGX5E,KAAK8E,eAAiBb,EAAMU,aAAaI,SAASF,KAAI,SAAAE,GAAQ,OAAIA,KAAU,SAAAP,GACxE,EAAK3E,SAAS,CAAC2E,MAAOA,SAZlC,6CAiBQP,EAAMU,aAAaC,QAAQI,MAAMhF,KAAK0E,gBACtCT,EAAMU,aAAaI,SAASC,MAAMhF,KAAK8E,kBAlB/C,+BA0BQ,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,CACI7F,KAAMe,KAAKN,MAAM8E,MACjBnB,YAAarD,KAAKyE,uBAEjBzE,KAAKN,MAAM8E,MAAQxE,KAAKN,MAAM8E,MAAMS,QAAU,MAEnD,kBAACV,EAAqBvE,KAAKrC,YAlC3C,GAAqBuC,cCMnBgF,GAAoB,CACtBC,MAAO,GACPC,MAAO,GACPC,OAAQ,IACRC,KAAM,IA8IKC,M,4MArIX7F,MAAQ,CACJwB,YAAa,KACbsE,WAAY,EACZ1C,aAAa,EACb2C,YAAY,EACZC,QAAQ,EACRlB,OAAO,G,EAaXmB,oBAAsB,SAACzE,GACnB,IAAM0E,EAAM5E,OAAOC,KAAKC,GAAaC,KAAI,SAACC,GACtC,OAAOF,EAAYE,MAEtBK,QAAO,SAACmE,EAAKjE,GACV,OAAOiE,EAAMjE,IACf,GACF,EAAK9B,SAAS,CAACiD,YAAa8C,EAAM,K,EAGtCC,qBAAuB,SAAAxF,GACnB,IACMyF,EADW,EAAKpG,MAAMwB,YAAYb,GACR,EAC1B0F,EAAkB,eACjB,EAAKrG,MAAMwB,aAElB6E,EAAmB1F,GAAQyF,EAE3B,IAAME,EAAgBd,GAAkB7E,GAElC4F,EADW,EAAKvG,MAAM8F,WACAQ,EAE5B,EAAKnG,SAAS,CAACqB,YAAa6E,EAAoBP,WAAYS,IAE5D,EAAKN,oBAAoBI,I,EAG7BG,wBAA0B,SAAA7F,GACtB,KAAG,EAAKX,MAAMwB,YAAYb,IAAS,GAAnC,CAGA,IACMyF,EADW,EAAKpG,MAAMwB,YAAYb,GACR,EAC1B0F,EAAkB,eACjB,EAAKrG,MAAMwB,aAElB6E,EAAmB1F,GAAQyF,EAE3B,IAAMK,EAAiBjB,GAAkB7E,GAEnC4F,EADW,EAAKvG,MAAM8F,WACAW,EAE5B,EAAKtG,SAAS,CAACqB,YAAa6E,EAAoBP,WAAYS,IAE5D,EAAKN,oBAAoBI,K,EAG7BK,gBAAkB,WACd,EAAKvG,SAAS,CAAC4F,YAAY,K,EAG/BY,sBAAwB,WACpB,EAAKxG,SAAS,CAAC4F,YAAY,K,EAG/Ba,wBAA0B,WACtB,IAAMC,EAAc,GACpB,IAAI,IAAIhF,KAAK,EAAK7B,MAAMwB,YACpBqF,EAAYC,KAAKC,mBAAmBlF,GAAK,IAAMkF,mBAAmB,EAAK/G,MAAMwB,YAAYK,KAE7FgF,EAAYC,KAAK,SAAW,EAAK9G,MAAM8F,YACvC,IAAMkB,EAAcH,EAAY/G,KAAK,KACrC,EAAK7B,MAAMgJ,QAAQH,KAAK,CACpBI,SAAU,YACVC,OAAQ,IAAMH,K,kEA1EA,IAAD,OACjBzC,GAAM6C,IAAI,iEACTC,MAAK,SAAAhC,GACF,EAAKlF,SAAS,CAACqB,YAAa6D,EAASiC,UAExCC,OAAM,SAAAzC,GACH,EAAK3E,SAAS,CAAC2E,OAAO,S,+BAyE1B,IAAM0C,EAAY,eACXlH,KAAKN,MAAMwB,aAGlB,IAAI,IAAIM,KAAO0F,EACXA,EAAa1F,GAAO0F,EAAa1F,IAAQ,EAG7C,IAAI2F,EAASnH,KAAKN,MAAM8E,MAAQ,0DAAqC,kBAAC,GAAD,MACjE4C,EAAe,KAyBnB,OAxBGpH,KAAKN,MAAMwB,cACViG,EACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAQjG,YAAelB,KAAKN,MAAMwB,cAClC,kBAAC,GAAD,CACIyB,gBAAiB3C,KAAK6F,qBACtBjD,kBAAmB5C,KAAKkG,wBACxB/D,SAAU+E,EACV1E,MAAOxC,KAAKN,MAAM8F,WAClB1C,YAAa9C,KAAKN,MAAMoD,YACxBC,QAAS/C,KAAKoG,mBAG1BgB,EAAe,kBAAC,GAAD,CACKlG,YAAalB,KAAKN,MAAMwB,YACxB4C,kBAAmB9D,KAAKqG,sBACxBtC,iBAAkB/D,KAAKsG,wBACvB9D,MAAOxC,KAAKN,MAAM8F,cAGtCxF,KAAKN,MAAMgG,SACX0B,EAAe,kBAAC,GAAD,OAIf,kBAAC,EAAD,KACI,kBAAC,GAAD,CAAOnI,KAAMe,KAAKN,MAAM+F,WAAYpC,YAAarD,KAAKqG,uBACjDe,GAEJD,O,GArIWjH,aA2ImB+D,I,6BCtIhCoD,GAjBS,SAAC1J,GACrB,OACI,yBAAKG,UAAWC,KAAQsJ,iBACpB,uDACA,yBAAK/D,MAAO,CAACgE,MAAO,OAAQC,OAAQ,SAChC,kBAAC,EAAD,CAAQrG,YAAavD,EAAMuD,eAE/B,kBAAC,GAAD,CACIwC,QAAQ,SACR9E,QAASjB,EAAM6J,iBAFnB,UAGA,kBAAC,GAAD,CACI9D,QAAQ,UACR9E,QAASjB,EAAM8J,mBAFnB,c,wCCsCGC,GAlDD,SAAC/J,GACX,IAAIgK,EAAe,KACbC,EAAe,CAAC7J,KAAQ8J,cAM9B,OAJGlK,EAAMmK,SAAWnK,EAAMoK,gBAAkBpK,EAAMqK,SAC9CJ,EAAapB,KAAKzI,KAAQkK,SAGtBtK,EAAMuK,aACV,IAAM,QACFP,EAAe,yCACK7J,UAAW8J,EAAapI,KAAK,MACzB7B,EAAMwK,cAFf,CAE8BC,MAAOzK,EAAMyK,MACtCC,SAAU1K,EAAM2K,WACpC,MACJ,IAAM,WACFX,EAAe,4CACK7J,UAAW8J,EAAapI,KAAK,MACzB7B,EAAMwK,cAFf,CAGKC,MAAOzK,EAAMyK,SACjC,MACJ,IAAM,SACFT,EACI,4BACI7J,UAAW8J,EAAapI,KAAK,KAC7B4I,MAAOzK,EAAMyK,MACbC,SAAU1K,EAAM2K,SACf3K,EAAMwK,cAAcI,QAAQpH,KAAI,SAACqH,GAAD,OAC7B,4BAAQhH,IAAKgH,EAAOJ,MAAOA,MAAOI,EAAOJ,OACpCI,EAAOC,kBAKxB,MACJ,QACId,EAAe,yCACK7J,UAAW8J,EAAapI,KAAK,MACzB7B,EAAMwK,cAFf,CAE8BC,MAAOzK,EAAMyK,MACtCC,SAAU1K,EAAM2K,WAG5C,OACI,yBAAKxK,UAAWC,KAAQ2J,OACpB,2BAAO5J,UAAWC,KAAQgE,OAAQpE,EAAMqE,OACvC2F,ICmJEe,G,4MA3LXhJ,MAAQ,CACJiJ,UAAW,CACPC,KAAM,CACFV,YAAa,QACbC,cAAe,CACX9H,KAAM,OACNwI,YAAa,aAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPhB,SAAS,GAEbiB,MAAO,CACHf,YAAa,QACbC,cAAe,CACX9H,KAAM,OACNwI,YAAa,eAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPhB,SAAS,GAEbkB,OAAQ,CACJhB,YAAa,QACbC,cAAe,CACX9H,KAAM,OACNwI,YAAa,UAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPhB,SAAS,GAEbmB,QAAS,CACLjB,YAAa,QACbC,cAAe,CACX9H,KAAM,OACNwI,YAAa,YAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,EACVK,UAAW,EACXC,UAAW,GAEfL,OAAO,EACPhB,SAAS,GAEbsB,QAAS,CACLpB,YAAa,QACbC,cAAe,CACX9H,KAAM,OACNwI,YAAa,WAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPhB,SAAS,GAEbuB,cAAe,CACXrB,YAAa,SACbC,cAAe,CACXI,QAAS,CACL,CAACH,MAAO,UAAWK,aAAc,WACjC,CAACL,MAAO,WAAYK,aAAc,cAG1CL,MAAO,GACPU,WAAY,GACZE,OAAO,IAGfQ,aAAa,EACbC,SAAS,G,EAGbC,aAAe,SAACC,GACZA,EAAMC,iBAEN,EAAK/J,SAAS,CAAC6F,QAAQ,IACvB,IAAMmE,EAAW,GACjB,IAAI,IAAIC,KAAyB,EAAKpK,MAAMiJ,UACxCkB,EAASC,GAAyB,EAAKpK,MAAMiJ,UAAUmB,GAAuB1B,MAElF,IAAM2B,EAAQ,CACV7I,YAAa,EAAKvD,MAAMuD,YACxBsB,MAAO,EAAK7E,MAAM6E,MAClBwH,UAAWH,GAEf5F,GAAMgG,KAAK,eAAgBF,GAC1BhD,MAAK,SAAAhC,GACF,EAAKlF,SAAS,CAAC6F,QAAQ,IACvB,EAAK/H,MAAMgJ,QAAQH,KAAK,QAE3BS,OAAM,SAAAzC,GACH,EAAK3E,SAAS,CAAC6F,QAAQ,Q,EA0B/BwE,oBAAsB,SAACP,EAAOQ,GAC1B,IAAMC,EAAgB,eACf,EAAK1K,MAAMiJ,WAEZ0B,EAAkB,eACjBD,EAAiBD,IAExBE,EAAmBjC,MAAQuB,EAAMW,OAAOlC,MACxCgC,EAAiBD,GAAmBE,EACpCA,EAAmBrB,MAAQ,EAAKuB,cAAcF,EAAmBjC,MAAOiC,EAAmBvB,YAC3FuB,EAAmBrC,SAAU,EAE7B,IAAIwB,GAAc,EAClB,IAAI,IAAIW,KAAmBC,EACvBZ,EAAcY,EAAiBD,GAAiBnB,OAASQ,EAE7D,EAAK3J,SAAS,CAAC8I,UAAWyB,EAAkBZ,YAAaA,K,4DAtC9CpB,EAAOoC,GAClB,IAAIC,GAAU,EAEd,OAAID,IAIDA,EAAMzB,WACL0B,EAA2B,KAAjBrC,EAAMsC,QAAiBD,GAGlCD,EAAMpB,YACLqB,EAAUrC,EAAMvG,QAAU2I,EAAMpB,WAAaqB,GAG9CD,EAAMnB,YACLoB,EAAUrC,EAAMvG,QAAU2I,EAAMnB,WAAaoB,GAG1CA,K,+BAsBA,IAAD,OACAE,EAAoB,GAC1B,IAAK,IAAInJ,KAAOxB,KAAKN,MAAMiJ,UACvBgC,EAAkBnE,KAAK,CAClBoE,GAAIpJ,EACJqJ,OAAQ7K,KAAKN,MAAMiJ,UAAUnH,KAItC,IAAIsJ,EACA,0BAAMC,SAAU/K,KAAK0J,cAChBiB,EAAkBxJ,KAAI,SAAC6J,GAAD,OACnB,kBAAC,GAAD,CACIxJ,IAAKwJ,EAAYJ,GACjB1C,YAAa8C,EAAYH,OAAO3C,YAChCC,cAAe6C,EAAYH,OAAO1C,cAClCC,MAAO4C,EAAYH,OAAOzC,MAC1BL,eAAgBiD,EAAYH,OAAO/B,WACnCd,QAASgD,EAAYH,OAAO7C,QAC5BM,QAAS,SAACqB,GAAW,OAAO,EAAKO,oBAAoBP,EAAOqB,EAAYJ,KACxE9C,SAAUkD,EAAYH,OAAO7B,WAErC,kBAAC,GAAD,CAAQtF,QAAQ,UAAUvB,UAAWnC,KAAKN,MAAM8J,aAAhD,UAMR,OAHOxJ,KAAKN,MAAMgG,SACVoF,EAAO,kBAAC,GAAD,OAGX,yBAAKhN,UAAWC,KAAQ2K,aACpB,uDACCoC,O,GAtLS5K,aC6CX+K,G,4MA9CXvL,MAAQ,CACJwB,YAAa,KACbsB,MAAO,G,EAmBX0I,yBAA2B,WACvB,EAAKvN,MAAMgJ,QAAQwE,U,EAGvBC,yBAA2B,WACvB,EAAKzN,MAAMgJ,QAAQ0E,QAAQ,2B,mEApB3B,IADkB,EACZC,EAAQ,IAAIC,gBAAgBvL,KAAKrC,MAAM6N,SAAS3E,QAChD3F,EAAc,GAChBsB,EAAQ,EAHM,eAID8I,EAAMG,WAJL,IAIlB,IAAI,EAAJ,qBAAiC,CAAC,IAA1BC,EAAyB,QAEb,UAAbA,EAAM,GACLlJ,EAAQkJ,EAAM,GAGdxK,EAAYwK,EAAM,KAAOA,EAAM,IAVrB,8BAalB1L,KAAKH,SAAS,CAACqB,YAAaA,EAAasB,MAAOA,M,+BAWzC,IAAD,OACN,OACI,6BACI,kBAAC,GAAD,CACItB,YAAalB,KAAKN,MAAMwB,YACxBsG,gBAAiBxH,KAAKkL,yBACtBzD,kBAAmBzH,KAAKoL,2BAC5B,kBAAC,IAAD,CACIO,KAAM3L,KAAKrC,MAAMiO,MAAMD,KAAO,gBAC9BE,OAAQ,SAAClO,GAAD,OACJ,kBAAC,GAAD,eAAauD,YAAa,EAAKxB,MAAMwB,YAAasB,MAAO,EAAK9C,MAAM8C,OAAW7E,Y,GAxChFuC,a,oBC6BR4L,GA/BD,SAACnO,GACX,IAAMuD,EAAc,GACpB,IAAI,IAAI6K,KAAkBpO,EAAMuD,YAC5BA,EAAYsF,KACR,CACIoC,KAAMmD,EACNC,OAAQrO,EAAMuD,YAAY6K,KAKtC,IAAIE,EAAmB/K,EAAYC,KAAI,SAAC+K,GACpC,OAAO,0BACC5I,MAAO,CACH6I,cAAe,aACfC,QAAS,eACT7E,OAAQ,QACR8E,QAAS,MACTC,OAAQ,kBAEZ9K,IAAK0K,EAAGtD,MAAOsD,EAAGtD,KARnB,KAQ2BsD,EAAGF,OAR9B,QAWX,OACI,yBAAKlO,UAAWC,KAAQ+N,OACpB,2CAAiBG,GACjB,qCAAU,uCAAaM,OAAOC,WAAW7O,EAAM6E,OAAOC,QAAQ,OCa3D8C,M,4MApCX7F,MAAQ,CACJ+M,OAAQ,GACRhD,SAAS,G,kEAGS,IAAD,OACjBxF,GAAM6C,IAAI,gBACTC,MAAK,SAAA2F,GACF,IAAMC,EAAgB,GACtB,IAAI,IAAInL,KAAOkL,EAAI1F,KACf2F,EAAcnG,KAAd,2BACOkG,EAAI1F,KAAKxF,IADhB,IAEIoJ,GAAIpJ,KAGZ,EAAK3B,SAAS,CAAC4J,SAAS,EAAOgD,OAAQE,OAE1C1F,OAAM,SAACzC,GACJ,EAAK3E,SAAS,CAAC4J,SAAS,S,+BAK5B,OACI,6BACKzJ,KAAKN,MAAM+M,OAAOtL,KAAI,SAAC4I,GAAD,OACnB,kBAAC,GAAD,CACIvI,IAAKuI,EAAMa,GACX1J,YAAa6I,EAAM7I,YACnBsB,MAAOuH,EAAMvH,gB,GA9BhBtC,aAqCmB+D,ICnBzB2I,G,uKAdX,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOjB,KAAK,YAAYkB,UAAW5B,KACnC,kBAAC,IAAD,CAAOU,KAAK,UAAUkB,UAAWC,KACjC,kBAAC,IAAD,CAAOnB,KAAK,IAAIrN,OAAK,EAACuO,UAAWE,Y,GAR3B7M,aCIE8M,QACW,cAA7BC,OAAOzB,SAAS0B,UAEe,UAA7BD,OAAOzB,SAAS0B,UAEhBD,OAAOzB,SAAS0B,SAAStB,MACvB,2DCHN,IAAMuB,GACF,kBAAC,IAAD,KACI,kBAAC,GAAD,OAIRC,IAASvB,OAAOsB,GAAKE,SAASC,eAAe,SD8GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1G,MAAK,SAAA2G,GACJA,EAAaC,gBAEd1G,OAAM,SAAAzC,GACLrB,QAAQqB,MAAMA,EAAMS,c","file":"static/js/main.8a2ed860.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1AkAL\",\"BreadTop\":\"BurgerIngredient_BreadTop__sWx0E\",\"Seeds1\":\"BurgerIngredient_Seeds1__3Csi7\",\"Seeds2\":\"BurgerIngredient_Seeds2__3Xqh6\",\"Meat\":\"BurgerIngredient_Meat__EUdJs\",\"Cheese\":\"BurgerIngredient_Cheese__2XTEc\",\"Salad\":\"BurgerIngredient_Salad__1FfOv\",\"Bacon\":\"BurgerIngredient_Bacon__1cBVL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1B0WO\",\"Open\":\"SideDrawer_Open__3BI2v\",\"Close\":\"SideDrawer_Close__pPH_O\",\"Logo\":\"SideDrawer_Logo__2VCvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3aevf\",\"Label\":\"BuildControl_Label__23CQo\",\"Less\":\"BuildControl_Less__3A6Ak\",\"More\":\"BuildControl_More__kRgaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3paRC\",\"Label\":\"Input_Label__2a8dz\",\"InputElement\":\"Input_InputElement__ojdLD\",\"Invalid\":\"Input_Invalid__1fBeM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3UPYt\",\"Logo\":\"Toolbar_Logo__2vRrb\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1NIzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1l1P8\",\"active\":\"NavigationItem_active__14tie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__34Kic\",\"OrderButton\":\"BuildControls_OrderButton__2IZ6K\",\"enable\":\"BuildControls_enable__1M1FE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2gJYg\",\"Success\":\"Button_Success__2i4aE\",\"Danger\":\"Button_Danger__3aF3W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1Pkh1\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__312y5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1QYDK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__XiUUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__2sBOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1hpW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__w6Dss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__VxHTL\",\"loader\":\"Spinner_loader__2koRC\",\"load2\":\"Spinner_load2__1aaVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__kJWfJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__7HnCP\",\"Input\":\"ContactData_Input__1SUXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2fYPT\"};","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary;","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\n\r\nconst Logo = props => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"MyBurger\"></img>\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst NavigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact active>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/Orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst DrawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = props => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>        \r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport classes from './BackDrop.module.css';\r\n\r\nconst BackDrop = props => (\r\n    props.show ? <div className={classes.BackDrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default BackDrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport BackDrop from '../../UI/BackDrop/BackDrop';\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst SideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Auxiliary>\r\n            <BackDrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>            \r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Auxiliary>        \r\n    );\r\n}\r\n\r\nexport default SideDrawer;","import React, {Component} from 'react';\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport classes from './Layout.module.css';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerCloseHandler = () => {\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxiliary>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer \r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerCloseHandler} />\r\n                <main className={classes.Content}>{this.props.children}</main>\r\n            </Auxiliary>\r\n        );\r\n    };\r\n} \r\n\r\nexport default Layout;","import React, {Component} from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient = null;\r\n\r\n    switch(this.props.type){\r\n        case('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case('bread-top'):\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n        case('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n        case('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n        case('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n        default: \r\n                ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n    }\r\n    \r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst Burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients).map((igKey) => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n        });\r\n    }).reduce((arr, el) => {\r\n        return arr.concat(el);\r\n    });\r\n\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst BuildControl = (props) => {\r\n    return(\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button \r\n                className={classes.Less} \r\n                onClick={props.removed}\r\n                disabled={props.disabled}>Less</button>\r\n            <button \r\n                className={classes.More} \r\n                onClick={props.added}>More</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BuildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n        {label:'Salad', type:'salad'},\r\n        {label:'Bacon', type:'bacon'},\r\n        {label:'Cheese', type:'cheese'},\r\n        {label:'Meat', type:'meat'}\r\n];\r\n\r\nconst BuildControls = (props) => {\r\n    return(\r\n        <div className={classes.BuildControls}>\r\n            <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n            {controls.map((ctrl) => {\r\n               return <BuildControl \r\n                            key={ctrl.label} \r\n                            label={ctrl.label}\r\n                            added={() => props.ingredientAdded(ctrl.type)} \r\n                            removed={() => props.ingredientRemoved(ctrl.type)}\r\n                            disabled={props.disabled[ctrl.type]} />\r\n            })}\r\n            <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>ORDER NOW</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BuildControls;\r\n","import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\nimport BackDrop from '../BackDrop/BackDrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate (nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        console.log('[Modal] willUpdate'\r\n        );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Auxiliary>\r\n                <BackDrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)': 'translateY(-100vh)', \r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                        {this.props.children}\r\n                </div>\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = props => (\r\n<button \r\n    className={[classes.Button, classes[props.btnType]].join(' ')}\r\n    onClick={props.clicked}\r\n    disabled={props.disabled}>{props.children}</button>\r\n);\r\n\r\nexport default Button;","import React, {Component} from 'react';\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    //This could be a functional component, doesn't have to be a class component\r\n    componentWillUpdate() {\r\n        console.log('[OrderSummery] willUpdate');\r\n    }\r\n\r\n    render () {\r\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\r\n            return <li key={igKey}>\r\n                        <span style={{testTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                    </li>\r\n            })\r\n\r\n        return (\r\n            <Auxiliary>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout!</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinue}>SUCCESS</Button>\r\n            </Auxiliary>\r\n        );\r\n    }\r\n} \r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-f35b8.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React, {Component} from 'react';\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst WithErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use(request => {\r\n                this.setState({error: null});\r\n                return request;\r\n            });\r\n            \r\n            this.resInterceptor = axios.interceptors.response.use(response => response, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount () {            \r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        };\r\n\r\n        render () {\r\n            return (\r\n                <Auxiliary>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler} \r\n                    >\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Auxiliary>     \r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default WithErrorHandler;","import React, {Component} from 'react';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n//global constant hence in capital letters\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    bacon: 0.4,\r\n    cheese: 1.3,\r\n    meat: 0.7\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {...};\r\n    // }\r\n\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loader: false,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        axios.get('https://react-my-burger-f35b8.firebaseio.com/ingredients.json')\r\n        .then(response => {\r\n            this.setState({ingredients: response.data});\r\n        })\r\n        .catch(error => {\r\n            this.setState({error: true});\r\n        });\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {       \r\n        const sum = Object.keys(ingredients).map((igKey) => {\r\n            return ingredients[igKey];\r\n        })\r\n        .reduce((sum, el) => {\r\n            return sum + el;\r\n        },0);\r\n        this.setState({purchasable: sum > 0});\r\n    }\r\n\r\n    addIngredientHandler = type => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        \r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n\r\n        this.setState({ingredients: updatedIngredients, totalPrice: newPrice});\r\n\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = type => {\r\n        if(this.state.ingredients[type] <= 0){\r\n            return;\r\n        }\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n\r\n        this.setState({ingredients: updatedIngredients, totalPrice: newPrice});\r\n\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {       \r\n        const queryParams = [];\r\n        for(let i in this.state.ingredients){\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice)\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render (){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n        //disabledInfo = {salad: true, meat: true, .....}\r\n        let burger = this.state.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n        let orderSummary = null;\r\n        if(this.state.ingredients){\r\n            burger = (\r\n                <Auxiliary>\r\n                    <Burger ingredients = {this.state.ingredients} />\r\n                    <BuildControls \r\n                        ingredientAdded={this.addIngredientHandler}\r\n                        ingredientRemoved={this.removeIngredientHandler}\r\n                        disabled={disabledInfo}\r\n                        price={this.state.totalPrice}\r\n                        purchasable={this.state.purchasable}\r\n                        ordered={this.purchaseHandler} />\r\n                </Auxiliary>\r\n            );\r\n            orderSummary = <OrderSummary \r\n                                ingredients={this.state.ingredients}\r\n                                purchaseCancelled={this.purchaseCancelHandler}\r\n                                purchaseContinue={this.purchaseContinueHandler}\r\n                                price={this.state.totalPrice} />;\r\n        }\r\n\r\n        if (this.state.loader){\r\n            orderSummary = <Spinner />;\r\n        }            \r\n\r\n        return (\r\n            <Auxiliary>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);","import React from 'react';\r\n\r\nimport Button from '../../UI/Button/Button';\r\nimport Burger from '../../Burger/Burger';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\" \r\n                clicked={props.onCancelClicked}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\" \r\n                clicked={props.onContinueClicked}>CONTINUE</Button>\r\n        </div>   \r\n    );\r\n};\r\n\r\nexport default CheckoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                                className={inputClasses.join(' ')} \r\n                                {...props.elementConfig} value={props.value} \r\n                                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                                className={inputClasses.join(' ')} \r\n                                {...props.elementConfig} \r\n                                value={props.value} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value} \r\n                    onChange={props.changed} >\r\n                    {props.elementConfig.options.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default: \r\n            inputElement = <input \r\n                                className={inputClasses.join(' ')} \r\n                                {...props.elementConfig} value={props.value} \r\n                                onChange={props.changed} />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Youe E-mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethd: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: '',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsvalid: false,\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({loader: true});\r\n        const formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        };\r\n        axios.post('/orders.json', order)\r\n        .then(response => {\r\n            this.setState({loader: false});\r\n            this.props.history.push('/');\r\n        })\r\n        .catch(error => {\r\n            this.setState({loader: false});\r\n        });\r\n    }\r\n\r\n    checkValidity (value, rules) {\r\n        let isValid = true;\r\n\r\n        if(!rules){\r\n            return true;\r\n        }\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        \r\n        let formIsvalid = true;\r\n        for(let inputIdentifier in updatedOrderForm){\r\n            formIsvalid = updatedOrderForm[inputIdentifier].valid && formIsvalid;\r\n        }        \r\n        this.setState({orderForm: updatedOrderForm, formIsvalid: formIsvalid});        \r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                 id: key,\r\n                 config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map((formElement) => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType} \r\n                        elementConfig={formElement.config.elementConfig} \r\n                        value={formElement.config.value}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => {return this.inputChangedHandler(event, formElement.id)}}\r\n                        invalid={!formElement.config.valid} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsvalid}>ORDER</Button>\r\n            </form>\r\n            );\r\n            if(this.state.loader){\r\n                form = <Spinner />;\r\n            }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;","import React, {Component} from 'react'; \r\nimport { Route } from 'react-router-dom';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from '../Checkout/ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n    state = {\r\n        ingredients: null,\r\n        price: 0\r\n    }         \r\n\r\n    componentWillMount () {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price = 0;\r\n        for(let param of query.entries()){\r\n            //[{'salad', '1'}, ....]\r\n            if(param[0] === 'price'){\r\n                price = param[1];\r\n            }\r\n            else {\r\n                ingredients[param[0]] = +param[1]; \r\n            }            \r\n        }\r\n        this.setState({ingredients: ingredients, price: price});\r\n    }\r\n\r\n    checkoutCancelledhandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render () {       \r\n        return (\r\n            <div>\r\n                <CheckoutSummary \r\n                    ingredients={this.state.ingredients}\r\n                    onCancelClicked={this.checkoutCancelledhandler}\r\n                    onContinueClicked={this.checkoutContinuedHandler} />\r\n                <Route \r\n                    path={this.props.match.path + '/contact-data'} \r\n                    render={(props) => (\r\n                        <ContactData ingredients={this.state.ingredients} price={this.state.price} {...props} />\r\n                    )} />\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = (props) => {\r\n    const ingredients = [];\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    let ingredientOutput = ingredients.map((ig) => {\r\n        return <span\r\n                style={{\r\n                    textTransform: 'capitalize',\r\n                    display: 'inline-block',\r\n                    margin: '0 8px',\r\n                    padding: '5px',\r\n                    border: '1px solid #ccc'\r\n                }}\r\n                key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount () {\r\n        axios.get('/orders.json')\r\n        .then(res => {            \r\n            const fetchedOrders = [];\r\n            for(let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            this.setState({loading: false, orders: fetchedOrders});            \r\n        })\r\n        .catch((error) => {\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.state.orders.map((order) => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients} \r\n                        price={order.price} />\r\n                ))}\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {  \n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path='/checkout' component={Checkout} />\n            <Route path='/Orders' component={Orders} />\n            <Route path='/' exact component={BurgerBuilder} />\n          </Switch>                    \n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}